diff --git a/node_modules/rome/bin/rome/index.js b/node_modules/rome/bin/rome/index.js
index 822e193..dbf1612 100755
--- a/node_modules/rome/bin/rome/index.js
+++ b/node_modules/rome/bin/rome/index.js
@@ -114948,56 +114948,56 @@ function ___R$$priv$project$rome$$internal$codec$spdx$license$parse_ts$isWordCha
 					// Sometimes licenses will be specified as "Apache 2.0" but what they actually meant was "Apache-2.0"
 
 					// In loose mode, just make it equivalent, otherwise, complain
-					if (licenseInfo === undefined && nextToken.type === "Word") {
-						const possibleCorrectLicense = id + "-" + nextToken.value;
-						const possibleLicenseInfo = ___R$project$rome$$internal$codec$spdx$license$index_ts$getSPDXLicense(
-							possibleCorrectLicense,
-						);
-
-						if (possibleLicenseInfo !== undefined) {
-							if (this.loose) {
-								// Just allow it...
-								licenseInfo = possibleLicenseInfo;
-								this.nextToken();
-							} else {
-								throw this.unexpected({
-									description: ___R$project$rome$$internal$diagnostics$descriptions$index_ts$descriptions.SPDX.VALID_LICENSE_WITH_MISSING_DASH(
-										possibleCorrectLicense,
-									),
-									start: this.getPositionFromIndex(token.start),
-									end: this.getPositionFromIndex(nextToken.end),
-								});
-							}
-						}
-					}
-
-					if (licenseInfo === undefined) {
-						throw this.unexpected({
-							description: ___R$project$rome$$internal$diagnostics$descriptions$index_ts$descriptions.SPDX.UNKNOWN_LICENSE(
-								id,
-								___R$project$rome$$internal$codec$spdx$license$index_ts$licenseNames,
-							),
-							start: this.getPositionFromIndex(token.start),
-							end: this.getPositionFromIndex(token.end),
-						});
-					}
+					// if (licenseInfo === undefined && nextToken.type === "Word") {
+					// 	const possibleCorrectLicense = id + "-" + nextToken.value;
+					// 	const possibleLicenseInfo = ___R$project$rome$$internal$codec$spdx$license$index_ts$getSPDXLicense(
+					// 		possibleCorrectLicense,
+					// 	);
+
+					// 	if (possibleLicenseInfo !== undefined) {
+					// 		if (this.loose) {
+					// 			// Just allow it...
+					// 			licenseInfo = possibleLicenseInfo;
+					// 			this.nextToken();
+					// 		} else {
+					// 			throw this.unexpected({
+					// 				description: ___R$project$rome$$internal$diagnostics$descriptions$index_ts$descriptions.SPDX.VALID_LICENSE_WITH_MISSING_DASH(
+					// 					possibleCorrectLicense,
+					// 				),
+					// 				start: this.getPositionFromIndex(token.start),
+					// 				end: this.getPositionFromIndex(nextToken.end),
+					// 			});
+					// 		}
+					// 	}
+					// }
+
+					// if (licenseInfo === undefined) {
+					// 	throw this.unexpected({
+					// 		description: ___R$project$rome$$internal$diagnostics$descriptions$index_ts$descriptions.SPDX.UNKNOWN_LICENSE(
+					// 			id,
+					// 			___R$project$rome$$internal$codec$spdx$license$index_ts$licenseNames,
+					// 		),
+					// 		start: this.getPositionFromIndex(token.start),
+					// 		end: this.getPositionFromIndex(token.end),
+					// 	});
+					// }
 
 					// Is this a plus? (wtf is this)
 					const plus = this.eatToken("Plus") !== undefined;
 
 					// Get exception
 					let exception;
-					if (this.eatToken("With")) {
-						const token = this.getToken();
-						if (token.type === "Word") {
-							exception = token.value;
-							this.nextToken();
-						} else {
-							throw this.unexpected({
-								description: ___R$project$rome$$internal$diagnostics$descriptions$index_ts$descriptions.SPDX.WITH_RIGHT_LICENSE_ONLY,
-							});
-						}
-					}
+					// if (this.eatToken("With")) {
+					// 	const token = this.getToken();
+					// 	if (token.type === "Word") {
+					// 		exception = token.value;
+					// 		this.nextToken();
+					// 	} else {
+					// 		throw this.unexpected({
+					// 			description: ___R$project$rome$$internal$diagnostics$descriptions$index_ts$descriptions.SPDX.WITH_RIGHT_LICENSE_ONLY,
+					// 		});
+					// 	}
+					// }
 
 					return {
 						type: "License",
